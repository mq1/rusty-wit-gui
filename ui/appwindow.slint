// SPDX-FileCopyrightText: 2023 Manuel Quarneti <hi@mq1.eu>
// SPDX-License-Identifier: GPL-3.0-only

import { Button, TabWidget , ListView} from "std-widgets.slint";

export struct Drive {
    label: string,
    path: string,
}

export component AppWindow inherits Window {
    preferred-height: 600px;
    preferred-width: 900px;
    default-font-size: 16px;

    in-out property <string> view: "select-drive";
    in-out property <[Drive]> drives: [];
    in-out property <Drive> selected-drive;
    in-out property <[string]> games: [];
    in-out property <int> current-progress: 0;
    in-out property <int> max-progress: 0;
    callback open-drive(Drive);
    callback add-games(Drive);
    callback remove-game(string);

    if view == "select-drive" : select-drive-view := VerticalLayout {
        alignment: center;
        spacing: 8px;

        HorizontalLayout {
            alignment: center;

            Text {
                text: "Select a drive";
                font-size: 32px;
            }
        }
        HorizontalLayout {
            alignment: center;
            spacing: 8px;

            for drive in drives : Button {
                text: drive.label;
                clicked => {
                    open-drive(drive);
                }
            }
        }
    }

    if view == "games" : games-view := VerticalLayout {
        padding: 8px;
        spacing: 8px;

        Text {
            text: "Games on " + selected-drive.label;
            font-size: 32px;
        }

        ListView {
            for game in games : Rectangle {
                border-color: #a7a7a7;
                border-width: 1px;
                border-radius: 8px;
                padding: 8px;

                HorizontalLayout {
                    padding: 8px;

                    Text {
                        text: game;
                        horizontal-stretch: 1;
                    }
                    Button {
                        text: "Remove";
                        horizontal-stretch: 0;
                        clicked => {
                            remove-game(game);
                        }
                    }
                }
            }
        }
        HorizontalLayout {
            alignment: end;

            Button {
                text: "Add game(s)";
                clicked => {
                    add-games(selected-drive);
                }
            }
        }
    }

    if view == "adding-games" : adding-games-view := VerticalLayout {
        alignment: center;
        spacing: 8px;

        HorizontalLayout {
            alignment: center;

            Text {
                text: "Adding game " + current-progress + "/" + max-progress;
                font-size: 32px;
            }
        }
    }
}
